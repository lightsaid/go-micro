version: "3.8"

# 服务
services:

  # 定义 broker-service 服务
  broker-service:
    # 构建
    build: 
      # 指定上下文(目录)
      context: ./../broker-service
      # 指定dockerfile
      dockerfile: ./../broker-service/broker-service.dockerfile

    # 设置开机启动
    restart: always

    # 端口映射
    ports:
      - "8080:8080"

    # 部署
    deploy:
      # 复制模式
      mode: replicated 
      replicas: 1
  
  ## 认证服务
  auth-service:
    build:
      context: ./../auth-service
      dockerfile: ./../auth-service/auth-service.dockerfile
    restart: always
    ports:
      - "8081:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=abc123 dbname=go_micro sslmode=disable connect_timeout=10"

  ## logger 服务
  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    # ports:
    #   - "8082:8080"
    deploy:
      mode: replicated
      replicas: 1
      

  # 数据库服务（postgresql）
  postgres:
    image: "postgres:14.0"
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: abc123
      POSTGRES_DB: go_micro
    volumes:
      - ./db-data/postgres:/var/lib/postgresql/data
  
  ## mongodb 服务
  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: abc123
    volumes:
      - ./db-data/mongo:/data/db

  # 邮件服务 (localhost:8025)
  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"
    